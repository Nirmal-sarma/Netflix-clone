{"version":3,"sources":["axios.js","Row.js","Request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instances","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","Request","fetchTrending","fetchNetFlixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","value","Math","floor","random","length","style","backgroundSize","backgroundImage","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAEaA,E,OAAWC,EAAMC,OAAO,CACjCC,QAAS,iC,wCCiEEC,MA5Df,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC9B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoCA,OAlCAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBd,EAAUe,IAAIT,GADtC,cACQU,EADR,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAOdG,KACC,CAACb,IAEJc,QAAQC,IAAIZ,GAyBV,sBAAKa,UAAU,MAAf,UACE,6BAAKjB,IAEL,qBAAKiB,UAAU,cAAf,SACGb,EAAOc,KAAI,SAACC,GAAD,OACV,qBAEEC,QAAS,kBAtBC,SAACD,GACfb,EACFC,EAAc,IAEdc,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IACzBC,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDb,QAAQC,IAAI,aAAcQ,GAC1BjB,EAAckB,EAAUf,IAAI,SAE7BmB,OAAM,SAACC,GAAD,OAAWf,QAAQC,IAAIc,MAYXC,CAAYZ,IAC3BF,UAAS,qBAAgBf,GAAc,mBACvC8B,IAAG,UAlDE,uCAkDF,OACD9B,EAAaiB,EAAMc,YAAcd,EAAMe,eAEzCC,IAAKhB,EAAMG,MANNH,EAAMiB,SAUhB9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAvCpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,UC5BVC,EAAQ,mCAYCC,EAVM,CACjBC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA4BL,EAA5B,mBACjBM,kBAAkB,2BAAD,OAA4BN,EAA5B,mBACjBO,kBAAkB,2BAAD,OAA4BP,EAA5B,mBACjBQ,mBAAmB,2BAAD,OAA4BR,EAA5B,sBAClBS,mBAAmB,2BAAD,OAA4BT,EAA5B,oB,MCkCPU,MAxCf,WACE,MAA0BlD,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcmC,EAAd,KAeA,OAbA9C,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACsBd,EAAUe,IAAIkC,EAAQE,uBAD5C,OACQS,EADR,OAEED,EACEC,EAAM3C,KAAKC,QACT2C,KAAKC,MAAMD,KAAKE,SAAWH,EAAM3C,KAAKC,QAAQ8C,OAAS,KAJ7D,4CADc,uBAAC,WAAD,wBASd7C,KACC,IAEHC,QAAQC,IAAIG,GAEV,wBACEF,UAAU,SACV2C,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,2CAAD,OAA6C3C,EAAMe,cAAnD,OAJnB,SAOE,sBAAKjB,UAAU,kBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAMnB,OAASmB,EAAMG,MAAQH,EAAM4C,gBACjE,sBAAK9C,UAAU,iBAAf,UACI,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAGJ,qBAAKA,UAAU,qBAAf,SACA,6BAAKE,EAAM6C,aAEX,qBAAK/C,UAAU,4B,MCRRgD,MA3Bf,WAEI,MAA2B9D,oBAAS,GAApC,mBAAO+D,EAAP,KAAaC,EAAb,KAcF,OAbA3D,qBAAU,WAQR,OAPA4D,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GACNA,GAAW,MAIb,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,qBAAKtD,UAAS,cAASiD,GAAQ,aAA/B,SACE,qBACEjD,UAAU,WACVe,IAAI,kEACJG,IAAI,oBCDGqC,MAjBf,WACE,OACE,sBAAKvD,UAAU,MAAf,UACI,cAAC,EAAD,IACD,cAAC,EAAD,IACD,cAAC,EAAD,CAAKjB,MAAM,mBAAmBC,SAAU2C,EAAQE,sBAAuB5C,YAAU,IACjF,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAU2C,EAAQC,gBAC5C,cAAC,EAAD,CAAK7C,MAAM,YAAYC,SAAU2C,EAAQG,gBACzC,cAAC,EAAD,CAAK/C,MAAM,gBAAgBC,SAAU2C,EAAQM,oBAC7C,cAAC,EAAD,CAAKlD,MAAM,iBAAiBC,SAAU2C,EAAQO,qBAC9C,cAAC,EAAD,CAAKnD,MAAM,gBAAgBC,SAAU2C,EAAQK,oBAC7C,cAAC,EAAD,CAAKjD,MAAM,cAAcC,SAAU2C,EAAQQ,yBCLlCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcc3a9bd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instances= axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { instances } from \"./axios\";\r\nimport \"./row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await instances.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  console.log(movies);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url)=>{\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(\"the url is\", url);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY=\"cb24e3c80a01decf14fff067838419bd\";\r\n\r\nexport const Request={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetFlixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default Request;","import React, { useState, useEffect } from \"react\";\r\nimport { instances } from \"./axios\";\r\nimport Request from \"./Request\";\r\nimport './Banner.css';\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const value = await instances.get(Request.fetchNetFlixOriginals);\r\n      setMovie(\r\n        value.data.results[\r\n          Math.floor(Math.random() * value.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(movie);\r\n  return ( \r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`,\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">{movie.title || movie.name || movie.original_name}</h1>\r\n        <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">My List</button>\r\n        </div>\r\n\r\n        <div className=\"banner_description\">\r\n        <h4>{movie.overview}</h4> \r\n        </div>\r\n        <div className=\"banner_fatebottom\"/>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect,useState } from \"react\";\r\nimport \"./nav.css\";\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false)\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n      \r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\")\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\"\r\n        alt=\"netflix_logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport Request from \"./Request\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Nav/>\n       <Banner/>\n      <Row title=\"NETFLIX_ORIGINAL\" fetchUrl={Request.fetchNetFlixOriginals} isLargeRow  />\n      <Row title=\"Trending Now\" fetchUrl={Request.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={Request.fetchTopRated} />\n      <Row title=\"Horror Movies\" fetchUrl={Request.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={Request.fetchRomanceMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={Request.fetchComedyMovies} />\n      <Row title=\"Documentary\" fetchUrl={Request.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}